function aDBS1nostrapreachFront = import_DBS_gait(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as a matrix.
%   ADBS1NOSTRAPREACHFRONT = IMPORTFILE(FILENAME) Reads data from text file
%   FILENAME for the default selection.
%
%   ADBS1NOSTRAPREACHFRONT = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads
%   data from rows STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   aDBS1nostrapreachFront = importfile('aDBS1 nostrap_reachFront.txt', 2,
%   1008);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2016/02/19 21:28:16

%% Initialize variables.
delimiter = '\t';
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
%   column11: double (%f)
%	column12: double (%f)
%   column13: double (%f)
%	column14: double (%f)
%   column15: double (%f)
%	column16: double (%f)
%   column17: double (%f)
%	column18: double (%f)
%   column19: double (%f)
%	column20: double (%f)
%   column21: double (%f)
%	column22: double (%f)
%   column23: double (%f)
%	column24: double (%f)
%   column25: double (%f)
%	column26: double (%f)
%   column27: double (%f)
%	column28: double (%f)
%   column29: double (%f)
%	column30: double (%f)
%   column31: double (%f)
%	column32: double (%f)
%   column33: double (%f)
%	column34: double (%f)
%   column35: double (%f)
%	column36: double (%f)
%   column37: double (%f)
%	column38: double (%f)
%   column39: double (%f)
%	column40: double (%f)
%   column41: double (%f)
%	column42: double (%f)
%   column43: double (%f)
%	column44: double (%f)
%   column45: double (%f)
%	column46: double (%f)
%   column47: double (%f)
%	column48: double (%f)
%   column49: double (%f)
%	column50: double (%f)
%   column51: double (%f)
%	column52: double (%f)
%   column53: double (%f)
%	column54: double (%f)
%   column55: double (%f)
%	column56: double (%f)
%   column57: double (%f)
%	column58: double (%f)
%   column59: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Create output variable
aDBS1nostrapreachFront = table(dataArray{1:end-1}, 'VariableNames', {'Field','Time','CLAVX','CLAVY','CLAVZ','LANKX','LANKY','LANKZ','LElbow_ARAnglesX','LElbow_ARAnglesY','LElbow_ARAnglesZ','LFHDX','LFHDY','LFHDZ','LForearm_ARAnglesX','LForearm_ARAnglesY','LForearm_ARAnglesZ','LHead_ARAnglesX','LHead_ARAnglesY','LHead_ARAnglesZ','LMC3X','LMC3Y','LMC3Z','LNeck_ARAnglesX','LNeck_ARAnglesY','LNeck_ARAnglesZ','LShoulder_ARAnglesX','LShoulder_ARAnglesY','LShoulder_ARAnglesZ','LThorax_ARAnglesX','LThorax_ARAnglesY','LThorax_ARAnglesZ','LWrist_ARAnglesX','LWrist_ARAnglesY','LWrist_ARAnglesZ','RANKX','RANKY','RANKZ','RElbow_ARAnglesX','RElbow_ARAnglesY','RElbow_ARAnglesZ','RForearm_ARAnglesX','RForearm_ARAnglesY','RForearm_ARAnglesZ','RMC3X','RMC3Y','RMC3Z','RNeck_ARAnglesX','RNeck_ARAnglesY','RNeck_ARAnglesZ','RShoulder_ARAnglesX','RShoulder_ARAnglesY','RShoulder_ARAnglesZ','RThorax_ARAnglesX','RThorax_ARAnglesY','RThorax_ARAnglesZ','RWrist_ARAnglesX','RWrist_ARAnglesY','RWrist_ARAnglesZ'});

